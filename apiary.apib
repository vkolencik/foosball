FORMAT: 1A
HOST: http://localhost:8080/

# Foosball

API pro správu Foosball her.

## Všichni hráči [/players{?order_by,asc}]

### Seznam všech hráčů [GET]

+ Parameters

    + order_by (enum[string], optional) - Řazení podle výher nebo proher.

        + Members

            + wins
            + losses

    + asc (optional) - Vzestupné řazení (jinak se řadí sestupně)

+ Response 200 (application/json)

    + Attributes

        + nickname: john (string) - přezdívka hráče
        + wins: 10 (number) - počet výher
        + losses: 3 (number) - počet proher

    + Body

            [
                {
                    "nickname": "john",
                    "wins": 10,
                    "losses": 3,
                },
                {
                    "nickname": "james",
                    "wins": 1,
                    "losses": 0
                }
            ]

### Vytvoření nového hráče [PUT]

+ Request

    + Attributes

        + nickname: john (string)

            Přezdívka hráče. Přezdívka musí být unikátní, včetně již smazaných hráčů.

    + Body

            {
                "nickname": "james"
            }

+ Response 201

    + Headers

            Location: /players/james

## Hráč [/players/{nickname}]

+ Parameters

    + nickname: john (string) - Přezdívka hráče (přezdívky musí být unikátní)

### Zobrazení konkrétního hráče [GET]

+ Response 200 (application/json)

    + Attributes

        + nickname: john (string) - přezdívka hráče
        + wins: 10 (number) - počet výher
        + losses: 3 (number) - počet proher

### Smazání hráče [DELETE]

Po smazání hráče nejdou vytvářet nové hry ve kterých by figuroval, ale jeho již existující hry se nadále zobrazují.

+ Response 204

## Seznam her [/games]

### Zobrazení seznamu her [GET]

+ Response 200 (application/json)

    + Attributes (array[Game])

    + Body

            [
                {
                    "id": 2,
                    "teamA": [ "moe", "homer" ],
                    "teamB": [ "rick", "morty" ],
                    "winningTeam": "B"
                },
                {
                    "id": 3,
                    "teamA": [ "bart", "lisa" ],
                    "teamB": [ "jake", "finn" ],
                    "winningTeam": "B"
                }
            ]

### Vytvoření hry [PUT]

+ Request (application/json)

    + Attributes (Game)

    + Body

            {
                "teamA": [ "bart", "lisa" ],
                "teamB": [ "jake", "finn" ],
                "winningTeam": "B"
            }

+ Response 201

    + Headers

            Location: /games/7

## Hra [/games/{id}]

### Zobrazení konkrétní hry [GET]

+ Parameters

    + id (number, required) - ID hry

+ Response 200

    + Attributes (Game)

    + Body

            {
                "id": 2,
                "teamA": [ "bart", "lisa" ],
                "teamB": [ "jake", "finn" ],
                "winningTeam": "B"
            }

## Data Structures

### Game
+ id (number)
+ teamA (array[string])
+ teamB (array[string])
+ winningTeam (enum[string])

    + Members

        + A
        + B
